{
	"info": {
		"_postman_id": "4020e39a-1826-478a-a8cf-8f83c06a5c5d",
		"name": "DEVNET2434",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List the networks in an organization",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/organizations/{{organizationId}}/networks",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"organizations",
						"{{organizationId}}",
						"networks"
					]
				},
				"description": "## HTTP REQUEST\n```\nGET /organizations/[organizationId]/networks\n```\n\n## PARAMETERS\n\n**parameters**|**Description of the parameter**\n :-------------: |:-------------:\nconfigTemplateId|An optional parameter that is the ID of a config template. Will return all networks bound to that template.\n\n### SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -X GET -H 'Content-Type: application/json' 'https://api.meraki.com/api/v0/organizations/[organizationId]/networks'\n```\n### SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 200\n[\n  {\n    \"id\":\"N_1234\",\n    \"organizationId\":\"1234\",\n    \"type\": \"wireless\",\n    \"name\":\"My network\",\n    \"timeZone\": \"US/Pacific\",\n    \"tags\": null\n  }\n]\n```"
			},
			"response": [
				{
					"name": "get Networks List - Meraki Dev Sandbox",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "{{X-Cisco-Meraki-API-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://dashboard.meraki.com/api/v0/organizations/{{organizationId}}/networks",
							"protocol": "https",
							"host": [
								"dashboard",
								"meraki",
								"com"
							],
							"path": [
								"api",
								"v0",
								"organizations",
								"{{organizationId}}",
								"networks"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Age",
							"value": "0",
							"name": "Age",
							"description": ""
						},
						{
							"key": "Cache-Control",
							"value": "no-cache",
							"name": "Cache-Control",
							"description": ""
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": ""
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": ""
						},
						{
							"key": "Date",
							"value": "Sun, 02 Jul 2017 00:28:27 GMT",
							"name": "Date",
							"description": ""
						},
						{
							"key": "Expires",
							"value": "Fri, 01 Jan 1990 00:00:00 GMT",
							"name": "Expires",
							"description": ""
						},
						{
							"key": "Last-Modified",
							"value": "Sun, 02 Jul 2017 00:28:27 GMT",
							"name": "Last-Modified",
							"description": ""
						},
						{
							"key": "Pragma",
							"value": "no-cache",
							"name": "Pragma",
							"description": ""
						},
						{
							"key": "Public-Key-Pins-Report-Only",
							"value": "max-age=1200; pin-sha256=\"2V5tfxXMLkn2kVg/Iv8FqL4JHcNVGEUFK27oSMYhHEU=\"; pin-sha256=\"8Rw90Ej3Ttt8RRkrg+WYDS9n7IS03bk5bjP/UXPtaY8=\"; pin-sha256=\"3YQf+D42t1/pQJhWTwYLRnFVnbBNXf9W5S6dmwq2+3g=\"; pin-sha256=\"klO23nT2ehFDXCfx3eHTDRESMz3asj1muO+4aIdjiuY=\"; pin-sha256=\"fake+hpkp+key+for+testing+report+only+QWERT=\"; includeSubDomains; report-uri=\"https://therealmerakidashboard.report-uri.io/r/default/hpkp/reportOnly\"",
							"name": "Public-Key-Pins-Report-Only",
							"description": ""
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": ""
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000; includeSubDomains",
							"name": "Strict-Transport-Security",
							"description": ""
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": ""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding",
							"name": "Vary",
							"description": ""
						},
						{
							"key": "X-Content-Digest",
							"value": "d05e0e864bbb30b106ec31cc5d3106f6b0744356",
							"name": "X-Content-Digest",
							"description": ""
						},
						{
							"key": "X-Frame-Options",
							"value": "sameorigin",
							"name": "X-Frame-Options",
							"description": ""
						},
						{
							"key": "X-Rack-Cache",
							"value": "stale, invalid, store",
							"name": "X-Rack-Cache",
							"description": ""
						},
						{
							"key": "X-Request-Id",
							"value": "6232fdba8f2c54f3b43ffd5098af50c6",
							"name": "X-Request-Id",
							"description": ""
						},
						{
							"key": "X-Runtime",
							"value": "0.062001",
							"name": "X-Runtime",
							"description": ""
						},
						{
							"key": "X-UA-Compatible",
							"value": "IE=Edge,chrome=1",
							"name": "X-UA-Compatible",
							"description": ""
						}
					],
					"cookie": [],
					"body": "[{\"id\":\"L_646829496481092083\",\"organizationId\":\"549236\",\"name\":\"Sandbox 3 - Kampala Uganda\",\"timeZone\":\"US/Mountain\",\"tags\":\" LearningLab Sandbox \",\"type\":\"combined\"},{\"id\":\"L_646829496481095584\",\"organizationId\":\"549236\",\"name\":\"Sandbox 1 - Galway Ireland\",\"timeZone\":\"America/Los_Angeles\",\"tags\":\" Global Sandbox \",\"type\":\"combined\"},{\"id\":\"L_646829496481095933\",\"organizationId\":\"549236\",\"name\":\"Sandbox 2 - Las Vegas USA\",\"timeZone\":\"America/Los_Angeles\",\"tags\":\" Sandbox \",\"type\":\"combined\"},{\"id\":\"L_646829496481095588\",\"organizationId\":\"549236\",\"name\":\"Sandbox 4 - Tokyo Japan\",\"timeZone\":\"America/Los_Angeles\",\"tags\":\" Sandbox \",\"type\":\"combined\"},{\"id\":\"L_646829496481095937\",\"organizationId\":\"549236\",\"name\":\"Cisco Live MTE\",\"timeZone\":\"Europe/Zurich\",\"tags\":null,\"type\":\"combined\",\"configTemplateId\":\"L_646829496481095982\"},{\"id\":\"L_646829496481095659\",\"organizationId\":\"549236\",\"name\":\"Sandbox 5 - Sydney Australia\",\"timeZone\":\"America/Los_Angeles\",\"tags\":\" Sandbox \",\"type\":\"combined\"},{\"id\":\"L_646829496481095660\",\"organizationId\":\"549236\",\"name\":\"Sandbox 6 - Vilnius Lithuana\",\"timeZone\":\"America/Los_Angeles\",\"tags\":\" Sandbox \",\"type\":\"combined\"},{\"id\":\"N_646829496481132993\",\"organizationId\":\"549236\",\"name\":\"Hotspot 2.0\",\"timeZone\":\"America/Los_Angeles\",\"tags\":null,\"type\":\"wireless\"},{\"id\":\"N_646829496481133452\",\"organizationId\":\"549236\",\"name\":\"Temp-Sandbox\",\"timeZone\":\"America/Los_Angeles\",\"tags\":null,\"type\":\"wireless\"}]"
				}
			]
		},
		{
			"name": "Return the content filtering settings for an MX network",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/contentFiltering",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"contentFiltering"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all available content filtering categories for an MX network",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/contentFiltering/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"contentFiltering",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Content Filtering Rules",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"allowedUrlPatterns\": [\n\t],\n\t\"blockedUrlPatterns\": [\n\t],\n\t\"blockedUrlCategories\": [\n\t\t \"meraki:contentFiltering/category/1\"\n\t],\n\t\"urlCategoryListSize\": \"fullList\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/contentFiltering",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"contentFiltering"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List of VLANS",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/vlans",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"vlans"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New VLAN",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 4,\n    \"networkId\": \"L_566327653141843049\",\n    \"name\": \"Test Equipment 4\",\n    \"applianceIp\": \"192.168.4.1\",\n    \"subnet\": \"192.168.4.0/24\",\n    \"fixedIpAssignments\": {},\n    \"reservedIpRanges\": [],\n    \"dnsNameservers\": \"upstream_dns\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/vlans",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"vlans"
					]
				}
			},
			"response": []
		},
		{
			"name": "List the devices in a network",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/devices",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"devices"
					]
				},
				"description": "## HTTP REQUEST\n```\nGET /networks/[networkId]/devices\n```\n\n## PARAMETERS\n**None**\n\n## SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -X GET -H 'Content-Type: application/json' 'https://api.meraki.com/api/v0/networks/[networkId]/devices'\n```\n\n## SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 200\n[\n  {\n    \"name\":\"My AP\",\n    \"lat\":37.4180951010362,\n    \"lng\":-122.098531723022,\n    \"serial\":\"Q2XX-XXXX-XXXX\",\n    \"mac\":\"00:11:22:33:44:55:66\",\n    \"model\":\"MR34\",\n    \"address\":\"1600 Pennsylvania Ave\",\n    \"lanIp\":\"1.2.3.4\"\n    \"tags\":\" recently-added \",\n    \"networkId\":\"N_1234\",\n    \"beaconIdParams\": {\n      \"uuid\": \"00000000-0000-0000-0000-000000000000\",\n      \"major\": 5,\n      \"minor\": 3,\n    }\n  }\n]\n```"
			},
			"response": [
				{
					"name": "get Devices List",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "{{X-Cisco-Meraki-API-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://dashboard.meraki.com/api/v0/networks/{{networkId}}/devices",
							"protocol": "https",
							"host": [
								"dashboard",
								"meraki",
								"com"
							],
							"path": [
								"api",
								"v0",
								"networks",
								"{{networkId}}",
								"devices"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate",
							"name": "Cache-Control",
							"description": ""
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": ""
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": ""
						},
						{
							"key": "Date",
							"value": "Sun, 02 Jul 2017 00:24:26 GMT",
							"name": "Date",
							"description": ""
						},
						{
							"key": "Expires",
							"value": "Fri, 01 Jan 1990 00:00:00 GMT",
							"name": "Expires",
							"description": ""
						},
						{
							"key": "Pragma",
							"value": "no-cache",
							"name": "Pragma",
							"description": ""
						},
						{
							"key": "Public-Key-Pins-Report-Only",
							"value": "max-age=1200; pin-sha256=\"2V5tfxXMLkn2kVg/Iv8FqL4JHcNVGEUFK27oSMYhHEU=\"; pin-sha256=\"8Rw90Ej3Ttt8RRkrg+WYDS9n7IS03bk5bjP/UXPtaY8=\"; pin-sha256=\"3YQf+D42t1/pQJhWTwYLRnFVnbBNXf9W5S6dmwq2+3g=\"; pin-sha256=\"klO23nT2ehFDXCfx3eHTDRESMz3asj1muO+4aIdjiuY=\"; pin-sha256=\"fake+hpkp+key+for+testing+report+only+QWERT=\"; includeSubDomains; report-uri=\"https://therealmerakidashboard.report-uri.io/r/default/hpkp/reportOnly\"",
							"name": "Public-Key-Pins-Report-Only",
							"description": ""
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": ""
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000; includeSubDomains",
							"name": "Strict-Transport-Security",
							"description": ""
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": ""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding",
							"name": "Vary",
							"description": ""
						},
						{
							"key": "X-Frame-Options",
							"value": "sameorigin",
							"name": "X-Frame-Options",
							"description": ""
						},
						{
							"key": "X-Rack-Cache",
							"value": "miss",
							"name": "X-Rack-Cache",
							"description": ""
						},
						{
							"key": "X-Request-Id",
							"value": "9cddcdc1efaea3748f1bbe0b7dba4bdd",
							"name": "X-Request-Id",
							"description": ""
						},
						{
							"key": "X-Runtime",
							"value": "0.079595",
							"name": "X-Runtime",
							"description": ""
						},
						{
							"key": "X-UA-Compatible",
							"value": "IE=Edge,chrome=1",
							"name": "X-UA-Compatible",
							"description": ""
						}
					],
					"cookie": [],
					"body": "[{\"lanIp\":\"10.10.130.99\",\"serial\":\"Q2PD-QG4J-JT9F\",\"mac\":\"0c:8d:db:66:45:6d\",\"lat\":51.5081677,\"lng\":-0.0598511,\"address\":\"\",\"tags\":\" devnet \",\"name\":\"Workshop 2 - Captive Portal\",\"model\":\"MR33\",\"networkId\":\"L_646829496481095933\"},{\"lanIp\":null,\"serial\":\"Q2RD-9R8X-VHE8\",\"mac\":\"e0:55:3d:ee:57:70\",\"lat\":37.4180951010362,\"lng\":-122.098531723022,\"address\":\"\",\"tags\":\" recently-added \",\"name\":null,\"model\":\"MR30H\",\"networkId\":\"L_646829496481095933\"},{\"lanIp\":null,\"serial\":\"Q2AT-YECB-HSLC\",\"mac\":\"00:18:0a:12:31:d0\",\"lat\":37.4180951010362,\"lng\":-122.098531723022,\"address\":\"\",\"tags\":\" recently-added \",\"name\":null,\"model\":\"MC74\",\"networkId\":\"L_646829496481095933\"},{\"lanIp\":null,\"serial\":\"Q2AT-DA5E-TRUS\",\"mac\":\"e0:55:3d:4e:bc:75\",\"lat\":37.4180951010362,\"lng\":-122.098531723022,\"address\":\"\",\"tags\":\" recently-added \",\"name\":null,\"model\":\"MC74\",\"networkId\":\"L_646829496481095933\"}]"
				}
			]
		},
		{
			"name": "List the clients of a device, up to a maximum of a month ago",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/devices/{{serial}}/clients?timespan=86400",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"devices",
						"{{serial}}",
						"clients"
					],
					"query": [
						{
							"key": "timespan",
							"value": "86400"
						}
					]
				},
				"description": "## HTTP REQUEST\n\n```\nGET /devices/[serial]/clients\n```\n\n## PARAMETERS\n\n**parameters**|**Description of the parameter**\n :-------------: |:-------------:\ntimespan|The timespan for which clients will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds).\n\n\n### SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -X GET -H 'Content-Type: application/json' 'https://api.meraki.com/api/v0/devices/[serial]/clients?timespan=86400'\n```\n\n### SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 200\n[\n  {\n    \"description\": \"Hayg's Nexus 5\",\n    \"mdnsName\": \"Hayg's Nexus 5\",\n    \"dhcpHostname\": \"HaygNexus5\",\n    \"usage\": {\"sent\": 1337.0, \"recv\": 7331.0},\n    \"mac\": \"00:18:D3:AD:B3:3F\",\n    \"ip\": \"1.2.3.4\",\n    \"id\": \"lk12uq\",\n    \"switchport\": null\n  },\n  ...\n]\n```"
			},
			"response": []
		},
		{
			"name": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"mac\":\"00:11:22:33:44:55\",\n\t\"name\":\"Miles's phone\",\n\t\"devicePolicy\":\"Group policy\",\n\t\"groupPolicyId\":\"101\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/clients/provision",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"clients",
						"provision"
					]
				},
				"description": "## HTTP REQUEST\n```\nPOST /networks/[networkId]/clients/provision\n```\n## PARAMETERS\n\n**Parameter**|**Description**\n :-------------: |:-------------:\nmac| The MAC address of the client. Required.\nname| The display name for the client. Optional. Limited to 255 bytes.\ndevicePolicy| The policy to apply to the specified client. Can be **Whitelisted**, **Blocked**, **Normal**, or **Group policy**. Required.\ngroupPolicyId| The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"mac\":\"00:11:22:33:44:55\",\"name\":\"Miles's phone\",\"devicePolicy\":\"Group policy\",\"groupPolicyId\":\"101\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/clients/provision'\n```\n\n## SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 201\n\n{\n  \"mac\": \"00:11:22:33:44:55\",\n  \"clientId\": \"k74272e\",\n  \"name\": \"Miles's phone\",\n  \"devicePolicy\": \"Group policy\",\n  \"groupPolicyId\": \"101\"\n}\n```"
			},
			"response": [
				{
					"name": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "{{X-Cisco-Meraki-API-Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"mac\":\"00:11:22:33:44:55\",\n\t\"name\":\"Miles's phone\",\n\t\"devicePolicy\":\"Group policy\",\n\t\"groupPolicyId\":\"101\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/{{networkId}}/clients/provision",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								"{{networkId}}",
								"clients",
								"provision"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx"
						},
						{
							"key": "Date",
							"value": "Mon, 10 Dec 2018 09:55:04 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "Fri, 01 Jan 1990 00:00:00 GMT"
						},
						{
							"key": "X-Frame-Options",
							"value": "sameorigin"
						},
						{
							"key": "X-Robots-Tag",
							"value": "none"
						},
						{
							"key": "X-UA-Compatible",
							"value": "IE=Edge,chrome=1"
						},
						{
							"key": "X-Request-Id",
							"value": "cf8e4b02e67b31a08e2cd46b9d9d89c1"
						},
						{
							"key": "X-Runtime",
							"value": "0.437186"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000; includeSubDomains"
						}
					],
					"cookie": [],
					"body": "{\n    \"mac\": \"00:11:22:33:44:55\",\n    \"clientId\": \"k909b4b\",\n    \"name\": \"Miles's phone\",\n    \"devicePolicy\": \"Group policy\",\n    \"groupPolicyId\": 101\n}"
				}
			]
		},
		{
			"name": "List the SSIDs in a network",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/ssids",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"ssids"
					]
				},
				"description": "## HTTP REQUEST\n```\nGET /networks/[networkId]/ssids\n```\n\n## PARAMETERS\n**None**\n\n## SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -X GET -H 'Content-Type: application/json' 'https://api.meraki.com/api/v0/networks/[networkId]/ssids'\n```\n## SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 200\n\n[\n  {\n    \"number\":0,\n    \"name\":\"SSID-1\",\n    \"enabled\":true,\n    \"authMode\":\"open\"\n  }\n]\n```"
			},
			"response": [
				{
					"name": "get SSIDs list - Meraki Dev Sandbox",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "{{X-Cisco-Meraki-API-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://dashboard.meraki.com/api/v0/networks/{{networkId}}/ssids",
							"protocol": "https",
							"host": [
								"dashboard",
								"meraki",
								"com"
							],
							"path": [
								"api",
								"v0",
								"networks",
								"{{networkId}}",
								"ssids"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate",
							"name": "Cache-Control",
							"description": ""
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": ""
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": ""
						},
						{
							"key": "Date",
							"value": "Sun, 02 Jul 2017 00:39:27 GMT",
							"name": "Date",
							"description": ""
						},
						{
							"key": "Expires",
							"value": "Fri, 01 Jan 1990 00:00:00 GMT",
							"name": "Expires",
							"description": ""
						},
						{
							"key": "Pragma",
							"value": "no-cache",
							"name": "Pragma",
							"description": ""
						},
						{
							"key": "Public-Key-Pins-Report-Only",
							"value": "max-age=1200; pin-sha256=\"2V5tfxXMLkn2kVg/Iv8FqL4JHcNVGEUFK27oSMYhHEU=\"; pin-sha256=\"8Rw90Ej3Ttt8RRkrg+WYDS9n7IS03bk5bjP/UXPtaY8=\"; pin-sha256=\"3YQf+D42t1/pQJhWTwYLRnFVnbBNXf9W5S6dmwq2+3g=\"; pin-sha256=\"klO23nT2ehFDXCfx3eHTDRESMz3asj1muO+4aIdjiuY=\"; pin-sha256=\"fake+hpkp+key+for+testing+report+only+QWERT=\"; includeSubDomains; report-uri=\"https://therealmerakidashboard.report-uri.io/r/default/hpkp/reportOnly\"",
							"name": "Public-Key-Pins-Report-Only",
							"description": ""
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": ""
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000; includeSubDomains",
							"name": "Strict-Transport-Security",
							"description": ""
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": ""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding",
							"name": "Vary",
							"description": ""
						},
						{
							"key": "X-Frame-Options",
							"value": "sameorigin",
							"name": "X-Frame-Options",
							"description": ""
						},
						{
							"key": "X-Rack-Cache",
							"value": "miss",
							"name": "X-Rack-Cache",
							"description": ""
						},
						{
							"key": "X-Request-Id",
							"value": "1a1aa6198735ce5af5e889c59b537145",
							"name": "X-Request-Id",
							"description": ""
						},
						{
							"key": "X-Runtime",
							"value": "0.095425",
							"name": "X-Runtime",
							"description": ""
						},
						{
							"key": "X-UA-Compatible",
							"value": "IE=Edge,chrome=1",
							"name": "X-UA-Compatible",
							"description": ""
						}
					],
					"cookie": [],
					"body": "[{\"number\":0,\"name\":\"Sandbox 4 - wireless WiFi\",\"enabled\":true,\"splashPage\":\"Click-through splash page\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"Bridge mode\",\"useVlanTagging\":false,\"authMode\":\"open\",\"walledGardenEnabled\":true,\"walledGardenRanges\":\"127.0.0.1/32\",\"minBitrate\":1,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":1,\"name\":\"excap-aapo\",\"enabled\":false,\"splashPage\":\"Click-through splash page\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"Bridge mode\",\"useVlanTagging\":false,\"authMode\":\"8021x-meraki\",\"encryptionMode\":\"wpa-eap\",\"walledGardenEnabled\":true,\"walledGardenRanges\":\"127.0.0.1/32\",\"minBitrate\":1,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":2,\"name\":\"excap-Eliot\",\"enabled\":true,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":3,\"name\":\"excap-DevNet\",\"enabled\":true,\"splashPage\":\"Click-through splash page\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"Bridge mode\",\"useVlanTagging\":false,\"authMode\":\"open\",\"walledGardenEnabled\":true,\"walledGardenRanges\":\"127.0.0.1/32\",\"minBitrate\":1,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":4,\"name\":\"Unconfigured SSID 5\",\"enabled\":false,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":5,\"name\":\"Unconfigured SSID 6\",\"enabled\":false,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":6,\"name\":\"Unconfigured SSID 7\",\"enabled\":false,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":7,\"name\":\"Unconfigured SSID 8\",\"enabled\":false,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":8,\"name\":\"Unconfigured SSID 9\",\"enabled\":false,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":9,\"name\":\"Unconfigured SSID 10\",\"enabled\":false,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":10,\"name\":\"Unconfigured SSID 11\",\"enabled\":false,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":11,\"name\":\"Unconfigured SSID 12\",\"enabled\":false,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":12,\"name\":\"Unconfigured SSID 13\",\"enabled\":false,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":13,\"name\":\"Unconfigured SSID 14\",\"enabled\":false,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0},{\"number\":14,\"name\":\"Unconfigured SSID 15\",\"enabled\":false,\"splashPage\":\"None\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"NAT mode\",\"authMode\":\"open\",\"minBitrate\":null,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0}]"
				}
			]
		},
		{
			"name": "Return a single SSID Copy",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/ssids/{{ssidNum}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"ssids",
						"{{ssidNum}}"
					]
				},
				"description": "## HTTP REQUEST\n```\nGET /networks/[networkId]/ssids/[number]\n```\n\n## PARAMETERS\n**None**\n\n## SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -X GET -H 'Content-Type: application/json' 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]'\n```\n## SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 200\n\n{\n  \"number\":0,\n  \"name\":\"SSID-1\",\n  \"enabled\":true,\n  \"authMode\":\"psk\",\n  \"encryptionMode\":\"wpa\",\n  \"psk\":\"abcd1234\",\n  \"splashPage\":\"Click-through splash page\",\n  \"perClientBandwidthLimitUp\":0,\n  \"perClientBandwidthLimitDown\":0,\n  \"ssidAdminAccessible\":false,\n  \"ipAssignmentMode\":\"NAT mode\",\n  \"walledGardenEnabled\":true,\n  \"walledGardenRanges\":\"192.168.1.1/24 192.168.37.10/32\"\n}\n```"
			},
			"response": [
				{
					"name": "get SSID - excap-DevNet - Meraki Dev Sandbox",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "{{X-Cisco-Meraki-API-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://dashboard.meraki.com/api/v0/networks/{{networkId}}/ssids/{{ssidNum}}",
							"protocol": "https",
							"host": [
								"dashboard",
								"meraki",
								"com"
							],
							"path": [
								"api",
								"v0",
								"networks",
								"{{networkId}}",
								"ssids",
								"{{ssidNum}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate",
							"name": "Cache-Control",
							"description": ""
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": ""
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": ""
						},
						{
							"key": "Date",
							"value": "Sun, 02 Jul 2017 00:39:45 GMT",
							"name": "Date",
							"description": ""
						},
						{
							"key": "Expires",
							"value": "Fri, 01 Jan 1990 00:00:00 GMT",
							"name": "Expires",
							"description": ""
						},
						{
							"key": "Pragma",
							"value": "no-cache",
							"name": "Pragma",
							"description": ""
						},
						{
							"key": "Public-Key-Pins-Report-Only",
							"value": "max-age=1200; pin-sha256=\"2V5tfxXMLkn2kVg/Iv8FqL4JHcNVGEUFK27oSMYhHEU=\"; pin-sha256=\"8Rw90Ej3Ttt8RRkrg+WYDS9n7IS03bk5bjP/UXPtaY8=\"; pin-sha256=\"3YQf+D42t1/pQJhWTwYLRnFVnbBNXf9W5S6dmwq2+3g=\"; pin-sha256=\"klO23nT2ehFDXCfx3eHTDRESMz3asj1muO+4aIdjiuY=\"; pin-sha256=\"fake+hpkp+key+for+testing+report+only+QWERT=\"; includeSubDomains; report-uri=\"https://therealmerakidashboard.report-uri.io/r/default/hpkp/reportOnly\"",
							"name": "Public-Key-Pins-Report-Only",
							"description": ""
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": ""
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000; includeSubDomains",
							"name": "Strict-Transport-Security",
							"description": ""
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": ""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding",
							"name": "Vary",
							"description": ""
						},
						{
							"key": "X-Frame-Options",
							"value": "sameorigin",
							"name": "X-Frame-Options",
							"description": ""
						},
						{
							"key": "X-Rack-Cache",
							"value": "miss",
							"name": "X-Rack-Cache",
							"description": ""
						},
						{
							"key": "X-Request-Id",
							"value": "017cc17a489283798fc5de2357d26cbd",
							"name": "X-Request-Id",
							"description": ""
						},
						{
							"key": "X-Runtime",
							"value": "0.103386",
							"name": "X-Runtime",
							"description": ""
						},
						{
							"key": "X-UA-Compatible",
							"value": "IE=Edge,chrome=1",
							"name": "X-UA-Compatible",
							"description": ""
						}
					],
					"cookie": [],
					"body": "{\"number\":3,\"name\":\"excap-DevNet\",\"enabled\":true,\"splashPage\":\"Click-through splash page\",\"ssidAdminAccessible\":false,\"ipAssignmentMode\":\"Bridge mode\",\"useVlanTagging\":false,\"authMode\":\"open\",\"walledGardenEnabled\":true,\"walledGardenRanges\":\"127.0.0.1/32\",\"minBitrate\":1,\"bandSelection\":\"Dual band operation\",\"perClientBandwidthLimitUp\":0,\"perClientBandwidthLimitDown\":0}"
				}
			]
		},
		{
			"name": "Update the attributes of an SSID",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"viaPostman935\",\n    \"enabled\": false,\n    \"splashPage\": \"None\",\n    \"perClientBandwidthLimitUp\": 0,\n    \"perClientBandwidthLimitDown\": 0,\n    \"ssidAdminAccessible\": false,\n    \"ipAssignmentMode\": \"NAT mode\",\n    \"authMode\": \"open\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/ssids/{{ssidNum}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"ssids",
						"{{ssidNum}}"
					]
				},
				"description": "## HTTP REQUEST\n```\nPUT /networks/[networkId]/ssids/[number]\n```\n\n## PARAMETERS\n\n**parameters**|**Description of the parameter**\n :-------------: |:-------------:\nname|The name of an SSID\nenabled|Whether or not an SSID is enabled\nauthMode|The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius')\nencryptionMode|The psk encryption mode for the SSID ('wpa', 'wep', 'wpa-eap')\npsk|The passkey for the SSID. This param is only valid if the authMode is 'psk'\nwpaEncryptionMode|The types of WPA encryption. ('WPA1 and WPA2', 'WPA2 only')\nsplashPage|The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi'). This attribute is not supported for template children.\nradiusServers|The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'\nhost|IP address of your RADIUS server\nport|UDP port the RADIUS server listens on for Access-requests\nsecret|RADIUS client shared secret\nradiusCoaEnabled|If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.\nradiusAccountingEnabled|Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'\nradiusAccountingServers|The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'\nhost|IP address to which the APs will send RADIUS accounting messages\nport|Port on the RADIUS server that is listening for accounting messages\nsecret|Shared key used to authenticate messages between the APs and RADIUS server\nradiusAttributeForGroupPolicies|Specify the RADIUS attribute used to look up group policies. Access points must receive this attribute in the RADIUS Access-Accept message. The value of the attribute must match the group policy name configured on this page (Filter-Id, Reply-Message, Airespace-ACL-Name, Aruba-User-Role)\nipAssignmentMode|The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator', 'VPN')\nuseVlanTagging|Direct trafic to use specific VLANs. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'\nconcentratorNetworkId|The concentrator to use for 'Layer 3 roaming with a concentrator' or 'VPN'.\nvlanId|The VLAN ID used for VLAN tagging. This param is only valid with 'Layer 3 roaming with a concentrator' and 'VPN'\ndefaultVlanId|The default VLAN ID used for 'all other APs'. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'\napTagsAndVlanIds|The list of tags and VLAN IDs used for VLAN tagging. This param is only valid with 'Bridge mode', 'Layer 3 roaming'\ntags|Comma-separated list of AP tags\nvlanId|Numerical identifier that is assigned to the VLAN\nwalledGardenEnabled|Allow access to a configurable list of IP ranges, which users may access prior to sign-on.\nwalledGardenRanges|Specify your walled garden by entering space-separated addresses and ranges using CIDR notation or domain name with wildcard. (e.g. 192.168.1.1/24 192.168.37.10/32, \\*.google.com, \\*.herokuapp.com). Meraki's splash page is automatically included in your walled garden.\nradiusOverride|If true, the RADIUS response can override VLAN tag. This is not valid with NAT mode client IP assignment.\nminBitrate|The minimum bitrate in Mbps. (1, 2, 5.5, 6, 9, 11, 12, 18, 24, 36, 48, 54)\nbandSelection|The client-serving radio frequencies. (Dual band operation, 5 GHz band only, Dual band operation with Band Steering)\nperClientBandwidthLimitUp|The upload bandwidth limit in Kbps. (0 represents no limit.)\nperClientBandwidthLimitDown|The download bandwidth limit in Kbps. (0 represents no limit.) \n\n### SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -X PUT -H 'Content-Type: application/json' --data-binary '{\"name\":\"new SSID name\", \"enabled\":true, \"authMode\":\"psk\", \"encryptionMode\":\"wpa\", \"psk\":\"abcd1234\", \"ipAssignmentMode\":\"Bridge mode\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]'\n```\n### SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 200\n\n{\n  \"number\":0,\n  \"name\":\"new SSID name\",\n  \"enabled\":true,\n  \"authMode\":\"psk\",\n  \"encryptionMode\":\"wpa\",\n  \"psk\":\"abcd1234\",\n  \"splashPage\":\"Click-through splash page\",\n  \"perClientBandwidthLimitUp\":0,\n  \"perClientBandwidthLimitDown\":0,\n  \"ssidAdminAccessible\":false,\n  \"ipAssignmentMode\":\"Bridge mode\",\n  \"walledGardenEnabled\":true,\n  \"walledGardenRanges\":\"192.168.1.1/24 192.168.37.10/32\"\n}\n```"
			},
			"response": []
		},
		{
			"name": "Return L3 Firewall rules for an MX Network",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/l3FirewallRules",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"l3FirewallRules"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update the L3 firewall rules of an MX Network",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"rules\": [\n    {\n        \"comment\": \"test\",\n        \"policy\": \"deny\",\n        \"protocol\": \"any\",\n        \"srcPort\": \"Any\",\n        \"srcCidr\": \"192.168.128.4/32\",\n        \"destPort\": \"Any\",\n        \"destCidr\": \"Any\",\n        \"syslogEnabled\": false\n    },\n    {\n        \"comment\": \"Default rule\",\n        \"policy\": \"allow\",\n        \"protocol\": \"Any\",\n        \"srcPort\": \"Any\",\n        \"srcCidr\": \"Any\",\n        \"destPort\": \"Any\",\n        \"destCidr\": \"Any\",\n        \"syslogEnabled\": false\n    }\n  ]\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/l3FirewallRules/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"l3FirewallRules",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "List the devices enrolled in an SM network with various specified fields and filters",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/sm/devices",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"sm",
						"devices"
					]
				},
				"description": "## HTTP REQUEST\n```\nGET /networks/[network_id]/sm/devices\n```\n\n## PARAMETERS\n\n**parameters**|**Description of the parameter**\n :-------------: |:-------------:\nfields|Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values. The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip, systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid, simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName, isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, hasMdm, hasDesktopAgent, diskEncryptionEnabled, hardwareEncryptionCaps, and passCodeLock.\nwifiMacs|Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values.\nserials|Filter devices by serial(s). Multiple serials can be passed in as comma separated values.\nids|Filter devices by id(s). Multiple ids can be passed in as comma separated values.\nscope|Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values.\nbatchToken|On networks with more than 1000 devices, the device list will be limited to 1000 devices per query. If there are more devices to be seen, a batch token will be returned as a part of the device list. To see the remainder of the devices, pass in the batchToken as a parameter in the next request. Requests made with the batchToken do not require additional parameters as the batchToken includes the parameters passed in with the original request. Additional parameters passed in with the batchToken will be ignored. \n\n### SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-KEY: <key>' -X GET -H 'Content-Type: application/json' 'https://api.meraki.com/api/v0/networks/[networkId]/sm/devices?fields=ip&scope=withAll,recently-added'\n```\n### SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 200\n\n{\n  \"devices\": [\n    {\n      \"id\": \"123456\",\n      \"name\": \"Device name\",\n      \"tags\": [\n        \"recently-added\"\n      ],\n      \"ssid\": \"Wifi name\",\n      \"wifiMac\": \"00:aa:00:00:a0:a0\"\n      \"osName\": \"iOS 9.3.2\",\n      \"systemModel\": \"iPod\",\n      \"uuid\": \"123aaa123aaa\",\n      \"serialNumber\": \"AABBCCDD\",\n      \"ip\": \"11.1.1.111\"\n    }\n  ],\n  \"batchToken\": <batchToken>\n}\n```"
			},
			"response": []
		},
		{
			"name": "List the HTTP servers for a network",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/httpServers",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"httpServers"
					]
				},
				"description": "## HTTP REQUEST\n```\nGET /networks/[networkId]/httpServers\n```\n## PARAMETERS\n**None**\n## SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers'\n```\n## SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 200\n\n[\n  {\n    \"id\": \"ABC123\",\n    \"networkId\": \"N_123\",\n    \"name\": \"My HTTP server\",\n    \"url\": \"https://www.example.com/webhooks\",\n    \"sharedSecret\": \"foobar\"\n  }\n]\n```"
			},
			"response": [
				{
					"name": "List the HTTP servers for a network",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "{{X-Cisco-Meraki-API-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/{{networkId}}/httpServers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								"{{networkId}}",
								"httpServers"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate",
							"name": "Cache-Control",
							"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": "The type of encoding used on the data."
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Mon, 29 Oct 2018 10:07:00 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Expires",
							"value": "Fri, 01 Jan 1990 00:00:00 GMT",
							"name": "Expires",
							"description": "Gives the date/time after which the response is considered stale"
						},
						{
							"key": "Pragma",
							"value": "no-cache",
							"name": "Pragma",
							"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000; includeSubDomains",
							"name": "Strict-Transport-Security",
							"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						},
						{
							"key": "X-Frame-Options",
							"value": "sameorigin",
							"name": "X-Frame-Options",
							"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
						},
						{
							"key": "X-Request-Id",
							"value": "56ac1f7f561013b7393e9912772dcf3d",
							"name": "X-Request-Id",
							"description": "Custom header"
						},
						{
							"key": "X-Robots-Tag",
							"value": "none",
							"name": "X-Robots-Tag",
							"description": "Custom header"
						},
						{
							"key": "X-Runtime",
							"value": "0.131626",
							"name": "X-Runtime",
							"description": "Custom header"
						},
						{
							"key": "X-UA-Compatible",
							"value": "IE=Edge,chrome=1",
							"name": "X-UA-Compatible",
							"description": "Custom header"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"name\": \"ngrok\",\n        \"url\": \"https://6a59f431.ngrok.io\",\n        \"sharedSecret\": \"supersecret\",\n        \"id\": \"aHR0cHM6Ly82YTU5ZjQzMS5uZ3Jvay5pb123\",\n        \"networkId\": \"N_643451796760561234\"\n    },\n    {\n        \"name\": \"node-red\",\n        \"url\": \"https://myservice.com/alerts\",\n        \"sharedSecret\": \"asdf1234\",\n        \"id\": \"aHR0cHM6Ly9tZXJha2lkZW1vLmludGVybmV0b2ZsZWdvLmNvbS9hbGVy123\",\n        \"networkId\": \"N_643451796760561234\"\n    }\n]"
				}
			]
		},
		{
			"name": "Return an HTTP server",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/httpServers/{{webhookId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"httpServers",
						"{{webhookId}}"
					]
				},
				"description": "## HTTP REQUEST\n```\nGET /networks/[networkId]/httpServers/[id]\n```\n## PARAMETERS\n**None**\n## SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/[id]'\n```\n## SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 200\n\n{\n  \"id\": \"ABC123\",\n  \"networkId\": \"N_123\",\n  \"name\": \"My HTTP server\",\n  \"url\": \"https://www.example.com/webhooks\",\n  \"sharedSecret\": \"foobar\"\n}\n```"
			},
			"response": [
				{
					"name": "Return an HTTP server",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "{{X-Cisco-Meraki-API-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/{{networkId}}/httpServers/{{webhookId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								"{{networkId}}",
								"httpServers",
								"{{webhookId}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate",
							"name": "Cache-Control",
							"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": "The type of encoding used on the data."
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Mon, 29 Oct 2018 10:11:45 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Expires",
							"value": "Fri, 01 Jan 1990 00:00:00 GMT",
							"name": "Expires",
							"description": "Gives the date/time after which the response is considered stale"
						},
						{
							"key": "Pragma",
							"value": "no-cache",
							"name": "Pragma",
							"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000; includeSubDomains",
							"name": "Strict-Transport-Security",
							"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						},
						{
							"key": "X-Frame-Options",
							"value": "sameorigin",
							"name": "X-Frame-Options",
							"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
						},
						{
							"key": "X-Request-Id",
							"value": "545f70507b9eac9224cbf31930004b06",
							"name": "X-Request-Id",
							"description": "Custom header"
						},
						{
							"key": "X-Robots-Tag",
							"value": "none",
							"name": "X-Robots-Tag",
							"description": "Custom header"
						},
						{
							"key": "X-Runtime",
							"value": "0.140632",
							"name": "X-Runtime",
							"description": "Custom header"
						},
						{
							"key": "X-UA-Compatible",
							"value": "IE=Edge,chrome=1",
							"name": "X-UA-Compatible",
							"description": "Custom header"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"ngrok\",\n    \"url\": \"https://6a59f431.ngrok.io\",\n    \"sharedSecret\": \"supersecret\",\n    \"id\": \"aHR0cHM6Ly82YTU5ZjQzMS5uZ3Jvay5pb123\",\n    \"networkId\": \"N_643451796760563508\"\n}"
				}
			]
		},
		{
			"name": "Add an HTTP server",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Webbie\",\n    \"url\": \"http://d24169a1.ngrok.io\",\n    \"sharedSecret\": \"demo\",\n    \"networkId\": \"N_566327653141902646\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/httpServers",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"httpServers"
					]
				},
				"description": "## HTTP REQUEST\n```\nPOST /networks/[networkId]/httpServers\n```\n## PARAMETERS\n**Name**|**Description**\n :-------------: |:-------------:\nname| A name for easy reference to the HTTP server\nurl| The URL of the HTTP server\nsharedSecret| A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.\n## SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My HTTP server\",\"url\":\"https://www.example.com/webhooks\",\"sharedSecret\":\"foobar\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers'\n```\n## SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 201\n\n{\n  \"id\": \"ABC123\",\n  \"networkId\": \"N_123\",\n  \"name\": \"My HTTP server\",\n  \"url\": \"https://www.example.com/webhooks\",\n  \"sharedSecret\": \"foobar\"\n}\n```"
			},
			"response": [
				{
					"name": "Add an HTTP server",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "{{X-Cisco-Meraki-API-Key}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Example Server\",\n  \"url\": \"https://www.example.com/webhooks\",\n  \"sharedSecret\": \"foobar\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/{{networkId}}/httpServers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								"{{networkId}}",
								"httpServers"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate",
							"name": "Cache-Control",
							"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Mon, 29 Oct 2018 10:29:47 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Expires",
							"value": "Fri, 01 Jan 1990 00:00:00 GMT",
							"name": "Expires",
							"description": "Gives the date/time after which the response is considered stale"
						},
						{
							"key": "Pragma",
							"value": "no-cache",
							"name": "Pragma",
							"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000; includeSubDomains",
							"name": "Strict-Transport-Security",
							"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"key": "X-Frame-Options",
							"value": "sameorigin",
							"name": "X-Frame-Options",
							"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
						},
						{
							"key": "X-Request-Id",
							"value": "f23892befc714e577074e72de2dd36a1",
							"name": "X-Request-Id",
							"description": "Custom header"
						},
						{
							"key": "X-Robots-Tag",
							"value": "none",
							"name": "X-Robots-Tag",
							"description": "Custom header"
						},
						{
							"key": "X-Runtime",
							"value": "0.194973",
							"name": "X-Runtime",
							"description": "Custom header"
						},
						{
							"key": "X-UA-Compatible",
							"value": "IE=Edge,chrome=1",
							"name": "X-UA-Compatible",
							"description": "Custom header"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"Example Server\",\n    \"url\": \"https://www.example.com/webhooks\",\n    \"sharedSecret\": \"foobar\",\n    \"id\": \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=\",\n    \"networkId\": \"N_643451796760563123\"\n}"
				}
			]
		},
		{
			"name": "Return the alert configuration for this network",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "59315a50-6d1d-4402-9b71-e2fae317b115",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/alertSettings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"alertSettings"
					]
				},
				"description": "## HTTP REQUEST\n```\nGET /networks/[networkId]/alertSettings\n```\n\n## PARAMETERS\n**None**\n\n### SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/alertSettings'\n```\n\n### SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 200\n{\n  \"defaultDestinations\": {\n    \"emails\": [\n      \"miles@meraki.com\"\n    ],\n    \"allAdmins\": true,\n    \"snmp\": true\n  },\n  \"alerts\": [\n    {\n      \"type\": \"gatewayDown\",\n      \"enabled\": true,\n      \"alertDestinations\": {\n        \"emails\": [\n          \"miles@meraki.com\"\n        ],\n        \"allAdmins\": false,\n        \"snmp\": false\n      },\n      \"filters\": {\n        \"timeout\": 60\n      }\n    }\n  ]\n}\n```"
			},
			"response": [
				{
					"name": "Return the alert configuration for this network",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "{{X-Cisco-Meraki-API-Key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/networks/{{networkId}}/alertSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								"{{networkId}}",
								"alertSettings"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"defaultDestinations\": {\n        \"emails\": [\n            \"miles@meraki.com\"\n        ],\n        \"allAdmins\": true,\n        \"snmp\": true\n    },\n    \"alerts\": [\n        {\n            \"type\": \"gatewayDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"miles@meraki.com\"\n                ],\n                \"allAdmins\": false,\n                \"snmp\": false\n            },\n            \"filters\": {\n                \"timeout\": 60\n            }\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Update the alert configuration for this network",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "59315a50-6d1d-4402-9b71-e2fae317b115",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "X-Cisco-Meraki-API-Key",
						"value": "{{X-Cisco-Meraki-API-Key}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"defaultDestinations\": {\n        \"emails\": [\n            \"mdenapol@cisco.com\"\n        ],\n        \"snmp\": false,\n        \"allAdmins\": false,\n        \"httpServerIds\": [\n            \"aHR0cDovL2QyNDE2OWExLm5ncm9rLmlv\"\n        ]\n    },\n    \"alerts\": [\n        {\n            \"type\": \"swFound\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {\n                \"regex\": \"\"\n            }\n        },\n        {\n            \"type\": \"pccOutage\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {\n                \"timeout\": 60,\n                \"tag\": \"- any -\"\n            }\n        },\n        {\n            \"type\": \"pccUnmanaged\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"geofencingOut\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"geofencingIn\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"pccEnrollment\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"settingsChanged\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        }\n    ]\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}/alertSettings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}",
						"alertSettings"
					]
				},
				"description": "## HTTP REQUEST\n```\nPUT /networks/[networkId]/alertSettings\n```\n## PARAMETERS\n**Name**|**Description**\n :-------------: |:-------------:\ndefaultDestinations| The network_wide destinations for all alerts on the network.\nemails| A list of emails that will recieve the alert(s).\nallAdmins| If true, then all network admins will receive emails.\nsnmp| If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.\nalerts| Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.\ntype| The type of alert\nenabled| A boolean depicting if the alert is turned on or off\nalertDestinations| A hash of destinations for this specific alert. Keys include: emails: A list of emails that will recieve information about the alert, allAdmins: If true, then all network admins will receive emails, and snmp: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.\nfilters| A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.\n\n## SAMPLE REQUEST\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"defaultDestinations\":{\"emails\":[\"miles@meraki.com\"],\"allAdmins\":true,\"snmp\":true},\"alerts\":[{\"type\":\"gatewayDown\",\"enabled\":true,\"alertDestinations\":{\"emails\":[\"miles@meraki.com\"],\"allAdmins\":false,\"snmp\":false},\"filters\":{\"timeout\":60}}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/alertSettings'\n```\n## SAMPLE RESPONSE\n```\nSuccessful HTTP Status: 200\n\n{\n  \"defaultDestinations\": {\n    \"emails\": [\n      \"miles@meraki.com\"\n    ],\n    \"allAdmins\": true,\n    \"snmp\": true\n  },\n  \"alerts\": [\n    {\n      \"type\": \"gatewayDown\",\n      \"enabled\": true,\n      \"alertDestinations\": {\n        \"emails\": [\n          \"miles@meraki.com\"\n        ],\n        \"allAdmins\": false,\n        \"snmp\": false\n      },\n      \"filters\": {\n        \"timeout\": 60\n      }\n    }\n  ]\n}\n```"
			},
			"response": [
				{
					"name": "Update the alert configuration for this network",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "{{X-Cisco-Meraki-API-Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"defaultDestinations\": {\n        \"emails\": [\"test@test.com\"],\n        \"snmp\": true,\n        \"allAdmins\": false,\n        \"httpServerIds\": [\"\"]\n    },\n    \"alerts\": [\n        {\n            \"type\": \"cameraDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {\n                \"timeout\": 5\n            }\n        },\n        {\n            \"type\": \"settingsChanged\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"customMotionAlertRecipients\",\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"switchDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {\n                \"timeout\": 5\n            }\n        },\n        {\n            \"type\": \"portSpeed\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {\n                \"selector\": \"any port\"\n            }\n        },\n        {\n            \"type\": \"portError\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {\n                \"selector\": \"any port\"\n            }\n        },\n        {\n            \"type\": \"portDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {\n                \"timeout\": 5,\n                \"selector\": \"important\"\n            }\n        },\n        {\n            \"type\": \"switchCriticalTemperature\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"udldError\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"rpsBackup\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"powerSupplyDown\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"newDhcpServer\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"usageAlert\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {\n                \"threshold\": 5242880,\n                \"period\": 1200\n            }\n        },\n        {\n            \"type\": \"rogueAp\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {\n                \"priority\": \"high\"\n            }\n        },\n        {\n            \"type\": \"repeaterDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {\n                \"timeout\": 5\n            }\n        },\n        {\n            \"type\": \"gatewayDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": true,\n                \"allAdmins\": true,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {\n                \"timeout\": 5\n            }\n        },\n        {\n            \"type\": \"vpnConnectivityChange\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"gatewayToRepeater\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"applianceDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {\n                \"timeout\": 5\n            }\n        },\n        {\n            \"type\": \"rogueDhcp\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"vrrp\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"clientConnectivity\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {\n                \"clients\": [\n                    {\n                        \"mac\": \"aa:bb:cc:dd:ee:ff\",\n                        \"name\": \"test-client\"\n                    }\n                ]\n            }\n        },\n        {\n            \"type\": \"cellularUpDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\"test@test.com\"],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"ipConflict\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"dhcpNoLeases\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"failoverEvent\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\"\"]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"ampMalwareBlocked\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"ampMalwareDetected\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"pccOutage\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {\n                \"timeout\": 60,\n                \"tag\": \"- any -\"\n            }\n        },\n        {\n            \"type\": \"swFound\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {\n                \"regex\": \"\"\n            }\n        },\n        {\n            \"type\": \"pccEnrollment\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"geofencingIn\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"geofencingOut\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"pccUnmanaged\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networks/{{networkId}}/alertSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								"{{networkId}}",
								"alertSettings"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"defaultDestinations\": {\n        \"emails\": [\n            \"miles@meraki.com\"\n        ],\n        \"snmp\": true,\n        \"allAdmins\": false,\n        \"httpServerIds\": [\n            \"\"\n        ]\n    },\n    \"alerts\": [\n        {\n            \"type\": \"cameraDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {\n                \"timeout\": 5\n            }\n        },\n        {\n            \"type\": \"settingsChanged\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"customMotionAlertRecipients\",\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"switchDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {\n                \"timeout\": 5\n            }\n        },\n        {\n            \"type\": \"portSpeed\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {\n                \"selector\": \"any port\"\n            }\n        },\n        {\n            \"type\": \"portError\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {\n                \"selector\": \"any port\"\n            }\n        },\n        {\n            \"type\": \"portDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {\n                \"timeout\": 5,\n                \"selector\": \"important\"\n            }\n        },\n        {\n            \"type\": \"switchCriticalTemperature\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"udldError\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"rpsBackup\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"powerSupplyDown\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"newDhcpServer\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"usageAlert\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {\n                \"threshold\": 5242880,\n                \"period\": 1200\n            }\n        },\n        {\n            \"type\": \"rogueAp\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {\n                \"priority\": \"high\"\n            }\n        },\n        {\n            \"type\": \"repeaterDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {\n                \"timeout\": 5\n            }\n        },\n        {\n            \"type\": \"gatewayDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": true,\n                \"allAdmins\": true,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {\n                \"timeout\": 5\n            }\n        },\n        {\n            \"type\": \"vpnConnectivityChange\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"gatewayToRepeater\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"applianceDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {\n                \"timeout\": 5\n            }\n        },\n        {\n            \"type\": \"rogueDhcp\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"vrrp\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"clientConnectivity\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {\n                \"clients\": [\n                    {\n                        \"mac\": \"aa:bb:cc:dd:ee:ff\",\n                        \"name\": \"Test client\"\n                    }\n                ]\n            }\n        },\n        {\n            \"type\": \"cellularUpDown\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"evjmtpe7@robot.zapier.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"ipConflict\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"dhcpNoLeases\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"failoverEvent\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": [\n                    \"\"\n                ]\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"ampMalwareBlocked\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"ampMalwareDetected\",\n            \"enabled\": true,\n            \"alertDestinations\": {\n                \"emails\": [\n                    \"test@test.com\"\n                ],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"pccOutage\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {\n                \"timeout\": 60,\n                \"tag\": \"- any -\"\n            }\n        },\n        {\n            \"type\": \"swFound\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {\n                \"regex\": \"\"\n            }\n        },\n        {\n            \"type\": \"pccEnrollment\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"geofencingIn\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"geofencingOut\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        },\n        {\n            \"type\": \"pccUnmanaged\",\n            \"enabled\": false,\n            \"alertDestinations\": {\n                \"emails\": [],\n                \"snmp\": false,\n                \"allAdmins\": false,\n                \"httpServerIds\": []\n            },\n            \"filters\": {}\n        }\n    ]\n}"
				}
			]
		}
	]
}